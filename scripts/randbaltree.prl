#! /usr/bin/perl
#                              -*- Mode: Perl -*- 
# randbaltree.prl --- 
# Author          : Amelia Bellamy-Rods
# Created On      : Summer 2006
# Last Modified By: Marcel Turcotte
# Last Modified On: Tue Dec 12 12:31:42 2006
# 
# Amelia B. Bellamy-Royds and Marcel Turcotte (2006) Can Clustal-Style 
#   Progressive Pairwise Alignment of Multiple Sequences Be Used in RNA 
#   Secondary Structure Prediction?
#
# Copyright (C) 2006 University of Ottawa
#
# This copyrighted source code is freely distributed under the terms
# of the GNU General Public License. 
#
# See LICENSE for details.

package TreeBuilder;

use warnings;
use TreeBuilder;

#Read command line arguments
($InputDir, $OutputDir, %HDargs) = checkInput(@ARGV);

print "Creating an Profile-Dynalign alignment ";
print "using a randomized balanced tree structure.\n";
print "\nDirectory of input files:\t", $InputDir;
print "\nDirectory for output files:\t", $OutputDir;
print "\nSpecified Profile-Dynalign arguments:\n";
foreach $k (keys(%HDargs)) {
	print $k, "->", $HDargs{$k}, "\n";
}
print "\n";
	
#Get the names of all input files, in random order:
@InFiles = randomize ( getFiles( $InputDir ) );

#Build a balanced file directory tree with
#the input files stored in the "leaves"
buildBalTree($OutputDir, @InFiles);

#Traverse the file tree, calling the pdynalign program
#at each level
traverseTree($OutputDir, %HDargs);

print "\n\nDone.  Total time consumed:";
my @alltimes = times();
print "\nThis process -- User:\t", $alltimes[0];
print "\nThis process -- System:\t", $alltimes[1];
print "\nAll Child processes -- User:\t", $alltimes[2];
print "\nAll Child processes -- System:\t", $alltimes[3];
print "\n";
